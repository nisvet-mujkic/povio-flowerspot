// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Povio.FlowerSpot.Persistence;

#nullable disable

namespace Povio.FlowerSpot.Persistence.Migrations
{
    [DbContext(typeof(FlowerSpotDbContext))]
    partial class FlowerSpotDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Povio.FlowerSpot.Domain.Entities.Flower", b =>
                {
                    b.Property<int>("FlowerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("FlowerId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ImageRef")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("FlowerId");

                    b.ToTable("Flowers", (string)null);
                });

            modelBuilder.Entity("Povio.FlowerSpot.Domain.Entities.Like", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("SightingId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("UserId", "SightingId");

                    b.HasIndex("SightingId");

                    b.ToTable("Like", (string)null);
                });

            modelBuilder.Entity("Povio.FlowerSpot.Domain.Entities.Sighting", b =>
                {
                    b.Property<int>("SightingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("SightingId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FlowerId")
                        .HasColumnType("integer");

                    b.Property<string>("ImageRef")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Latitude")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Longitude")
                        .HasColumnType("numeric");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("SightingId");

                    b.HasIndex("FlowerId");

                    b.HasIndex("UserId");

                    b.ToTable("Sighting", (string)null);
                });

            modelBuilder.Entity("Povio.FlowerSpot.Domain.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("UserId");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Povio.FlowerSpot.Domain.Entities.Like", b =>
                {
                    b.HasOne("Povio.FlowerSpot.Domain.Entities.Sighting", "Sighting")
                        .WithMany("Likes")
                        .HasForeignKey("SightingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Povio.FlowerSpot.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sighting");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Povio.FlowerSpot.Domain.Entities.Sighting", b =>
                {
                    b.HasOne("Povio.FlowerSpot.Domain.Entities.Flower", "Flower")
                        .WithMany()
                        .HasForeignKey("FlowerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Povio.FlowerSpot.Domain.Entities.User", "User")
                        .WithMany("Sightings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Flower");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Povio.FlowerSpot.Domain.Entities.Sighting", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("Povio.FlowerSpot.Domain.Entities.User", b =>
                {
                    b.Navigation("Sightings");
                });
#pragma warning restore 612, 618
        }
    }
}
